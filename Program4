Experiment 4: Practical Exercise: Build and Run a Java Application with
Maven, Migrate the Same Application to Gradle

Step1:
mvn archetype:generate \
  -DgroupId=com.example \
  -DartifactId=HelloMaven \
  -DarchetypeArtifactId=maven-archetype-quickstart \
  -DinteractiveMode=false

Step:2
cd HelloMaven

Optional:
Pom.xml file in case of errors                                                         //Use this only if there are errors 
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>HelloMaven</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>HelloMaven</name>
  <url>http://maven.apache.org</url>

  <!-- dependencies -->
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- build + compiler plugin -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>17</source>
          <target>17</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>

Step3: 
mvn package

Step4:
java -cp target/HelloMaven-1.0-SNAPSHOT.jar com.example.App


Step5:
mkdir HelloMavenGradle
cd HelloMavenGradle
gradle init --type java-application                                //Choose the appropriate options after this cmd

Step6:
# Make com/example package folder
mkdir -p src/main/java/com/example
# Move the App.java with its package line (`package com.example;`)
mv ../HelloMaven/src/main/java/com/example/App.java src/main/java/com/example/

Step7:
gradle build

Step8:
gradle run


